---
title: API Reference

language_tabs: # must be one of https://git.io/vQNgJ
  - http

toc_footers:
  - <a href='#'>Sign Up for a Developer Key</a>
  - <a href='https://github.com/slatedocs/slate'>Documentation Powered by Slate</a>

includes:
  - success
  - errors
  - language
  - currency
  - product

search: true

code_clipboard: true

meta:
  - name: description
    content: Documentation for the Kittn API
---

# API Methods

MD5Key and opcode will be provided by platform

## Inbound Request

<%= image_tag 'images/inbound_request.png', :alt => 'Inbound Request' %>

### Launch Game

> Method: POST  
> Headers: content-type: (application/json)

```http
https://{domain}/aio/seamless.verialma/launchgame/getGameUrl
```


###Parameters

Name | Type | Required | Example
---------- | ------- | ------- | ---------------
opcode | string | Required | 
product | string | Required | “EL”, “PO”, “KK” (Refer <a href='#product'>Product Code</a>)
type | string | Required | “LC”, “SL” LC = LIVE CASINO, SL = SLOT (Refer <a href='#product'>Product Type</a>)
username | string | Required | 6 to 12 characters. Only alphabet and digit allowed E:g testing123
memberId | long | Required | E.g: 123456
password | string | Required | 6 to 12 characters. Only alphabet and digit allowed
signature | string | Required
lang | string | Optional | Refer <a href='#language'>Language Value</a>
html5 | string | Optional | “0” – Desktop (Default), “1” – Mobile
gameid | string | Optional | default = “0”

###Returned JSON data

Returns | Type
------- | --------
code | string 
url | string 
message | string 

###Parameter “code”

Code | Description
----- | -----------
0 | SUCCESS 
2 | SYSTEM EXCEPTION 
8 | INVALID PARAMETER
17 | API ERROR
19 | METHOD NOT EXIST
21 | PRODUCT IS NOT READY FOR PARTICULAR AGENT
22 | CURRENT PRODUCT NOT SUPPORT TYPE – “LC""
23 | INVALID LANGUAGE FORMAT
27 | USERNAME MUST BE UNIQUE
699 | INVALID PRODUCT CODE
617 | INVALID SIGNATURE 

<aside class="notice">
One username only allows a single memberId 
</aside>

signature algorithm 

MD5 hashing(opcode + memberId + password + product + type + username + MD5Key) 

EG, MD5(abcd + 123 + 2Ywe8N92921 + EL + LC + testing123 + MD5Key)

## Outbound Request

> Partner will require to provide wallet endpoint Url Partner Wallet  
> Method: POST  
> Headers: content-type (application/json)

``` http
Url: (Example) https://partnerwalletendpointurl.com/seamless/wallet/request 
```

<%= image_tag 'images/outbound_request.png', :alt => 'Outbound Request' %>

Description: 
Wallet Request

GSC seamless will only require 1 single wallet endpoint. All the outbound requests from GSC seamless will be send to partner system via the wallet endpoint provided by operator.
There are 9 types of outbound requests GSC seamless will send to operator.

* GetUserBalance 
* Bet 
* Result 
* Refund 
* Bonus 
* Jackpot 
* Promo 
* TransferInOut 
* Update

All type of outbound request will have property “method” Operator could check on the property “method” to know which type of outbound have send from GSC seamless.

## Get User Balance

> Example request 
```http
{"method":"GetUserBalance","opcode":"test","userId":"testing123","product":"PK","password":"2 81cf3b242b390c4eac8fff2e0baf514"}
```
> Example Response
```http
{"code":”0”,”opcode”:”test”,”userId”:”testing123”,"balance":952490}
```


Description: 
Get User Balance 

<aside class="notice">
Return data parameter “balance” are required in 2 decimal places
</aside>

### Request Parameters

Parameters | Type | Required
---------- | ------- | -------
method | string  | Required
opcode | string  | Required
userId | string  | Required
product | string  | Required
password | string  | Required

password algorithm
MD5 hashing(method + opcode + product + userId + MD5Key)

### Returned JSON Data

<a href='#success'>JSON Data</a>

### Error Code

<a href='#errors'>Error Codes</a>
