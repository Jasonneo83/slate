---
title: API Reference

language_tabs: # must be one of https://git.io/vQNgJ
  - http

toc_footers:
  - <a href='#'>Sign Up for a Developer Key</a>
  - <a href='https://github.com/slatedocs/slate'>Documentation Powered by Slate</a>

includes:
  - success
  - errors

search: true

code_clipboard: true

meta:
  - name: description
    content: Documentation for the Kittn API
---

# API Methods

MD5Key and opcode will be provided by platform

## Inbound Request

<%= image_tag 'images/inbound_request.png', :alt => 'Inbound Request' %>

### Launch Game

> To launch game, POST to this URL

```http
http://www.google.com
https://{domain}/aio/seamless.verialma/launchgame/getGameUrl
content-type: (application/json)
```

Parameters
*opcode – string (Mandatory)
*product – string(Mandatory) eg. “EL”, “PO”, “KK”(Refer to Chapter 4. Product List Table – Column Product Code)
*type – string(Mandatory) eg. “LC”, “SL” LC – Indicated LIVE CASINO, SL - SLOT(Refer to Chapter 4. Product List Table – Column Product Type)
*username – string(Mandatory)(member username on partner system) eg. (testing123) 
  - min 6 characters, max 12 characters 
  - only alphabet, digit
*memberId – long(Mandatory) (memberId in partner system) eg. 123456
*password – string(Mandatory) (member password for api request on partner system) 
  - min 6 characters, max 12 characters 
  - only alphabet, digit
*signature – string(Mandatory)
*lang – string(O) Please refer to chapter 2
*html5 – string(O) default = “0” (“0” – (Desktop), “1” – (Mobile))
*gameid – string(O) default = “0”

Returned data json 
*code – string 
*url – string 
*message – string 

Parameter “code”
*0 – SUCCESS 
*2 – SYSTEM_EXCEPTION 
*8 – INVALID_PARAMETER
*17 – APIERROR
*19 – METHOD_NOT_EXIST
*21 – PRODUCT_IS_NOT_READY_FOR_PARTICULAR_AGENT
*22 – CURRENT PRODUCT NOT SUPPORT TYPE – “LC""
*23 – INVALID LANGUAGE FORMAT
*27 – USERNAME MUST BE UNIQUE
*699 – INVALID_PRODUCT_CODE
*617 – INVALID_SIGNATURE

** One username will only allow with one memberId 

signature algorithm 

MD5 hashing(opcode + memberId + password + product + type + username + MD5Key) 

EG, MD5(abcd + 123 + 2Ywe8N92921 + EL + LC + testing123 + MD5Key)

## Outbound Request

<%= image_tag 'images/outbound_request.png', :alt => 'Outbound Request' %>
